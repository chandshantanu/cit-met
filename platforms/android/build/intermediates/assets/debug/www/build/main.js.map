{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/geocode/geocode.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkD;AACa;AAET;AAGS;AAM/D,IAAa,QAAQ;IASnB,kBAAmB,OAAsB,EAC/B,UAAsB,EACtB,QAAwB,EACxB,SAAyB;QAHhB,YAAO,GAAP,OAAO,CAAe;QAC/B,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,cAAS,GAAT,SAAS,CAAgB;QAVnC,iBAAY,GAAG;YACb,KAAK,EAAE,EAAE;SACV,CAAC;IAWF,CAAC;IACD,2BAAQ,GAAR;QAEE,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAC9D,gCAAgC;QAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE;IAC7B,CAAC;IAED,+BAAY,GAAZ;QACE,IAAI,OAAO,GAAG;YACZ,KAAK,EAAE,CAAC,UAAU,CAAC;SACpB,CAAC;QACF,sCAAsC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG;YACX,oGAAoG;YACpG,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC9B,qBAAqB,EAAE,EAAE;SAC1B;QACD,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,MAAM,EAAE,UAAU,WAAW,EAAE,MAAM;YACtE,sEAAsE;YACtE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU;gBACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACxC,qCAAqC;gBACrC,kDAAkD;YACpD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACK,6BAAU,GAAhB,UAAiB,IAAI;;;;;4BAER,qBAAM,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;;+BAApD,SAAoD;wBAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;;;;;KAIlB;IACK,kCAAe,GAArB;;;;gBACE,IAAI,CAAC,UAAU,CAAC,4BAA4B,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;oBACvD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACb,KAAK,SAAS;4BACZ,oBAAoB;4BACpB,KAAK,CAAC,WAAW,CAAC;4BAClB,KAAK,CAAC;wBACR,KAAK,QAAQ;4BACX,KAAI,CAAC,YAAY,EAAE,CAAC;4BACpB,KAAK,CAAC;oBACV,CAAC;gBACH,CAAC,CAAC;;;;KACH;IACD,+BAAY,GAAZ;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACnC,KAAK,EAAE,mBAAmB;YAC1B,QAAQ,EAAE,wDAAwD;YAClE,OAAO,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAGH,eAAC;AAAD,CAAC;AA/EY,QAAQ;IAJpB,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;qFAUyC;QACnB,qFAAU;QACZ,sEAAc;QACd,KAAe;AAmEpC;SA/EY,QAAQ,e;;;;;;;;;;;ACZsD;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACD;AACmB;AACd;AACN;AACV;AACoB;AAW3B;AAEI;AACM;AACiB;AAgC/D,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IA9BrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAK;YACL,mEAAQ;SACT;QACD,OAAO,EAAE;YACP,gFAAa,EAAC,iEAAU;YACxB,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;gBACE,KAAK,EAAE,EAEN;aACF,CAAC;SACC;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YACf,6DAAK;YACL,mEAAQ;SACT;QACD,SAAS,EAAE;YACT,2EAAS;YACT,iFAAY;YACZ,2EAAQ;YACR,4EAAU;YACV,qFAAc;YACd,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;YACpD,oFAAe;YACf,iBAAiB;SAClB;KACF,CAAC;GACW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACtDoB;AACD;AACY;AACM;AAEb;AAI9C,IAAa,KAAK;IAGhB,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,kEAAQ,CAAC;QAGtB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAXY,KAAK;IAHjB,wEAAS,CAAC;OACc;KACxB,CAAC;UAIgF;AAQjF;SAXY,KAAK,2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyB;AACN;AACN;AACM;AAErC;;;;;EAKE;AAEF,IAAa,eAAe;IAE1B,yBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC3B,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IACK,qCAAW,GAAjB,UAAkB,EAAU;;;;;4BAEX,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kEAAkE,GAAC,EAAE,GAAC,8CAA8C,CAAC,CAAC,SAAS,EAAE;;mCAArJ,SAAqJ;wBACpK,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;;;;;KAEtB;IACH,sBAAC;AAAD,CAAC;AAXY,eAAe;IAD3B,yEAAU,EAAE;qCAGc,2DAAI;GAFlB,eAAe,CAW3B;AAX2B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 108;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 108\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { googlemaps } from 'googlemaps';\nimport { Diagnostic } from '@ionic-native/diagnostic';\nimport { GeocodeProvider } from '../../providers/geocode/geocode';\nimport { GeocoderRequest, Geocoder } from '@ionic-native/google-maps'\nimport { NativeGeocoder } from '@ionic-native/native-geocoder';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  autocompleteItems: any;\n  autocomplete = {\n    query: ''\n  };\n  acService: any;\n  placesService: any;\n  city_data: any;\n\n  constructor(public navCtrl: NavController,\n    private diagnostic: Diagnostic,\n    private geocoder: NativeGeocoder,\n    private alertCtrl:AlertController\n  ) {\n\n  }\n  ngOnInit() {\n\n    this.acService = new google.maps.places.AutocompleteService();\n    //this.city_data = this.geocode.\n    this.autocompleteItems = []\n  }\n\n  updateSearch() {\n    var options = {\n      types: ['(cities)']\n    };\n    //console.log('modal > updateSearch');\n    if (this.autocomplete.query == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    let self = this;\n    let config = {\n      //types:  ['geocode'], // other types available in the API: 'establishment', 'regions', and 'cities'\n      input: this.autocomplete.query,\n      componentRestrictions: {}\n    }\n    this.acService.getPlacePredictions(config, function (predictions, status) {\n      //console.log('modal > getPlacePredictions > status > ', predictions);\n      self.autocompleteItems = [];\n      predictions.forEach(function (prediction) {\n        self.autocompleteItems.push(prediction);\n        //console.log(prediction.description)\n        //console.log(this.acService.getPlace(prediction))\n      });\n    });\n  }\n  async chooseItem(item) {\n    //console.log(item.description)\n    var data = await this.geocoder.forwardGeocode(item.description)\n    console.log(data)\n    //this.city_data= new googlemaps.placesService\n    //this.geocode.get_geocode(item.place_id)\n    //var response= await this.h\n  }\n  async select_location() {\n    this.diagnostic.requestLocationAuthorization().then((resp) => {\n      switch (resp) {\n        case 'GRANTED':\n          //this.start_data();\n          alert('Permitted')\n          break;\n        case 'DENIED':\n          this.alert_denied();\n          break;\n      }\n    })\n  }\n  alert_denied(){\n    const alert1 = this.alertCtrl.create({\n      title: 'Location Required',\n      subTitle: 'Please enable location setting or try typing location.',\n      buttons: ['Dismiss']\n  });\n  alert1.present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { Diagnostic } from '@ionic-native/diagnostic';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpModule } from '@angular/http';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  GoogleMapOptions,\n  CameraPosition,\n  MarkerOptions,\n  Geocoder,\n  GeocoderRequest,\n  Marker\n } from '@ionic-native/google-maps';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { GeocodeProvider } from '../providers/geocode/geocode';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Geocoder,\n    Diagnostic,\n    NativeGeocoder,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    GeocodeProvider\n    //HttpModule,Http\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\n/*\n  Generated class for the GeocodeProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GeocodeProvider {\n\n  constructor(public http: Http) {\n    console.log('Hello GeocodeProvider Provider');\n  }\n  async get_geocode(id: string): Promise<any> {\n    //id='ChIJL_P_CXMEDTkRw0ZdG-0GVvw'\n    var response = await this.http.get('https://maps.googleapis.com/maps/api/place/details/json?placeid='+id+'&key=AIzaSyDFsIf3oZmqqVHMfpMv0fh5BHZdAZKFNdM').toPromise()\n    console.log(response)\n    //return response.json()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/geocode/geocode.ts"],"sourceRoot":""}